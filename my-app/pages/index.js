import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useRef, useState } from 'react'

import Web3Modal from "web3modal";
import { providers, Contract } from 'ethers';
import {WHITELIST_CONTRACT_ADDRESS, abi} from "../constants";


const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [walletConnected, setWalletConnected] = useState(false);

  const [joinedWhitelist, setJoinedWhitelist] = useState(false);

  const [loading, setLoading] = useState(false);

  const [numberOfWhitelisted, setNumerOfWhitelisted] = useState(0);

  const web3ModalRef = useRef();

  const getProviderOrSigner = async (needSigner = false) => {
    const provider = await web3ModalRef.current.connect();

    const web3Provider = new providers.Web3Provider(provider);

    const {chainId} = await web3Provider.getNetwork();
    if (chainId !== 5) {
      window.alert("Change the network to Goerli");
      throw new Error("Change the network to Goerli");
    }

    if (needSigner) {
      const signer = web3Provider.getSigner();
      return signer;
    }

    return web3Provider;
  }


  const clickToAddAddressToWhitelist = async () => {
    try {
      const signer = await getProviderOrSigner(true);

      console.log('abi', abi);
      
      const whitelistContract = new Contract(WHITELIST_CONTRACT_ADDRESS, abi, signer);

      console.log('contract', whitelistContract);

      const tx = await whitelistContract.addAddressToWhiteList();
      setLoading(true);

      await tx.wait();

      setLoading(false);

      await getNumberOfWhitelisted();

      setJoinedWhitelist(true);

    }catch(err) {
      console.error(err);
    }
  }

  const getNumberOfWhitelisted = async () => {
    try {
      const provider = await getProviderOrSigner();
      
      const whitelistContract = new Contract(WHITELIST_CONTRACT_ADDRESS, abi, provider);
      
      const _numberOfWhitelisted = await whitelistContract.numAddressesWhitelisted();

      setNumerOfWhitelisted(_numberOfWhitelisted);
    } catch (error) {
      console.error(error);
    }
  }


  const checkIfAddressInWhitelist = async () => {
    try {
      const signer = await getProviderOrSigner(true);
      const whitelistContract = new Contract(WHITELIST_CONTRACT_ADDRESS, abi, signer);

      const address = await signer.getAddress();

      const _joinedWhitelist = await whitelistContract.whitelistedAddresses(address);

      setJoinedWhitelist(_joinedWhitelist);

    } catch (error) {
      console.error(error);
    }
  }

  const connectWallet = async () => {
    try {
      await getProviderOrSigner();
      setWalletConnected(true);

      checkIfAddressInWhitelist();
      getNumberOfWhitelisted();
    } catch (error) {
      console.error(error);
    }
  }

  const renderButton = () => {
    if (walletConnected) {
      if (joinedWhitelist) {
        return (
          <div className={styles.description}>
            Thanks for joining the WhiteList!
          </div>
        );
      }else if (loading) {
        return <button className={styles.button}>Loading...</button>
      }else {
        return (
          <button onClick={clickToAddAddressToWhitelist} className={styles.button}>Join the WhiteList</button>
        )
      }
    }
  }

  useEffect(() => {
    if (!walletConnected) {
      web3ModalRef.current = new Web3Modal({network: "goerli", providerOptions: {}, disableInjectedProvider: false});

      connectWallet();
    }
  }, [walletConnected]);


  return (
    <div>
      <Head>
        <title>Whitelist Dapp</title>
        <meta name="description" content="Whitelist-Dapp" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <div>
          <h1 className={styles.title}>Welcome to Crypto Devs!</h1>
          <div className={styles.description}>
            {/* Using HTML Entities for the apostrophe */}
            It&#39;s an NFT collection for developers in Crypto.
          </div>
          <div className={styles.description}>
            {numberOfWhitelisted} have already joined the Whitelist
          </div>
          {renderButton()}
        </div>
        <div>
          <img className={styles.image} src="./crypto-devs.svg" />
        </div>
      </div>

      <footer className={styles.footer}>
        Made with &#10084; by Crypto Devs
      </footer>
    </div>
  );



  // return (
  //   <>
  //     <Head>
  //       <title>Create Next App</title>
  //       <meta name="description" content="Generated by create next app" />
  //       <meta name="viewport" content="width=device-width, initial-scale=1" />
  //       <link rel="icon" href="/favicon.ico" />
  //     </Head>
  //     <main className={styles.main}>
  //       <div className={styles.description}>
  //         <p>
  //           Get started by editing&nbsp;
  //           <code className={styles.code}>pages/index.js</code>
  //         </p>
  //         <div>
  //           <a
  //             href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
  //             target="_blank"
  //             rel="noopener noreferrer"
  //           >
  //             By{' '}
  //             <Image
  //               src="/vercel.svg"
  //               alt="Vercel Logo"
  //               className={styles.vercelLogo}
  //               width={100}
  //               height={24}
  //               priority
  //             />
  //           </a>
  //         </div>
  //       </div>

  //       <div className={styles.center}>
  //         <Image
  //           className={styles.logo}
  //           src="/next.svg"
  //           alt="Next.js Logo"
  //           width={180}
  //           height={37}
  //           priority
  //         />
  //         <div className={styles.thirteen}>
  //           <Image
  //             src="/thirteen.svg"
  //             alt="13"
  //             width={40}
  //             height={31}
  //             priority
  //           />
  //         </div>
  //       </div>

  //       <div className={styles.grid}>
  //         <a
  //           href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
  //           className={styles.card}
  //           target="_blank"
  //           rel="noopener noreferrer"
  //         >
  //           <h2 className={inter.className}>
  //             Docs <span>-&gt;</span>
  //           </h2>
  //           <p className={inter.className}>
  //             Find in-depth information about Next.js features and&nbsp;API.
  //           </p>
  //         </a>

  //         <a
  //           href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
  //           className={styles.card}
  //           target="_blank"
  //           rel="noopener noreferrer"
  //         >
  //           <h2 className={inter.className}>
  //             Learn <span>-&gt;</span>
  //           </h2>
  //           <p className={inter.className}>
  //             Learn about Next.js in an interactive course with&nbsp;quizzes!
  //           </p>
  //         </a>

  //         <a
  //           href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
  //           className={styles.card}
  //           target="_blank"
  //           rel="noopener noreferrer"
  //         >
  //           <h2 className={inter.className}>
  //             Templates <span>-&gt;</span>
  //           </h2>
  //           <p className={inter.className}>
  //             Discover and deploy boilerplate example Next.js&nbsp;projects.
  //           </p>
  //         </a>

  //         <a
  //           href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
  //           className={styles.card}
  //           target="_blank"
  //           rel="noopener noreferrer"
  //         >
  //           <h2 className={inter.className}>
  //             Deploy <span>-&gt;</span>
  //           </h2>
  //           <p className={inter.className}>
  //             Instantly deploy your Next.js site to a shareable URL
  //             with&nbsp;Vercel.
  //           </p>
  //         </a>
  //       </div>
  //     </main>
  //   </>
  // )
}
